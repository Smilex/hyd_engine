-- GENERATED by C->Haskell Compiler, version 0.16.4 Crystal Seed, 24 Jan 2009 (Haskell)
-- Edit the ORIGNAL .chs file instead!


{-# LINE 1 "Input.chs" #-}{-# LANGUAGE ForeignFunctionInterface #-}
{-# LANGUAGE TypeSynonymInstances #-}


{-# context lib="hyd" #-}

module Hyd.Input where

import Foreign
import Foreign.C.Types
import Foreign.C.String
import Control.Monad
import Control.Applicative
import Data.Functor

import Hyd.Texture

data HydInputPreset = HydInputPreset
	{ name'hyd_input_preset :: String
	}
instance Storable HydInputPreset where
	sizeOf _ = 40
{-# LINE 23 "Input.chs" #-}
	alignment _ = 8
{-# LINE 24 "Input.chs" #-}
	peek p = HydInputPreset
			<$> ((\ptr -> do {peekByteOff ptr 0 ::IO (Ptr CChar)}) p)
	poke p x = do
		(\ptr val -> do {pokeByteOff ptr 0 (val::(Ptr CChar))}) p (name'hyd_input_preset x)

type HydInputPresetPtr = Ptr (HydInputPreset)
{-# LINE 30 "Input.chs" #-}

withT = with

hydInputPresetGetActionValue :: HydInputPreset -> String -> IO (Int)
hydInputPresetGetActionValue a1 a2 =
  withT a1 $ \a1' -> 
  withCString a2 $ \a2' -> 
  hydInputPresetGetActionValue'_ a1' a2' >>= \res ->
  let {res' = fromIntegral res} in
  return (res')
{-# LINE 37 "Input.chs" #-}

hydInputGetMaxValue :: IO (Int)
hydInputGetMaxValue =
  hydInputGetMaxValue'_ >>= \res ->
  let {res' = fromIntegral res} in
  return (res')
{-# LINE 40 "Input.chs" #-}

foreign import ccall safe "Input.chs.h hyd_input_preset_get_action_value"
  hydInputPresetGetActionValue'_ :: ((HydInputPresetPtr) -> ((Ptr CChar) -> (IO CUShort)))

foreign import ccall safe "Input.chs.h hyd_input_get_max_value"
  hydInputGetMaxValue'_ :: (IO CUShort)
